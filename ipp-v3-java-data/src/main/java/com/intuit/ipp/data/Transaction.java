/*******************************************************************************
 * Copyright (c) 2017 Intuit
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.06.06 at 02:08:21 PM PDT 
//


package com.intuit.ipp.data;

import java.io.Serializable;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import com.intuit.sb.cdm.util.v3.DateAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * 
 * 				Product: ALL
 * 				Description: Transaction is the base
 * 				class of all transactions.
 * 			
 * 
 * <p>Java class for Transaction complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Transaction">
 *   &lt;complexContent>
 *     &lt;extension base="{http://schema.intuit.com/finance/v3}IntuitEntity">
 *       &lt;sequence>
 *         &lt;element name="DocNumber" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="TxnDate" type="{http://www.w3.org/2001/XMLSchema}date" minOccurs="0"/>
 *         &lt;element name="DepartmentRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/>
 *         &lt;element name="CurrencyRef" type="{http://schema.intuit.com/finance/v3}ReferenceType" minOccurs="0"/>
 *         &lt;element name="ExchangeRate" type="{http://www.w3.org/2001/XMLSchema}decimal" minOccurs="0"/>
 *         &lt;element name="PrivateNote" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="TxnStatus" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="LinkedTxn" type="{http://schema.intuit.com/finance/v3}LinkedTxn" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Line" type="{http://schema.intuit.com/finance/v3}Line" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="TxnTaxDetail" type="{http://schema.intuit.com/finance/v3}TxnTaxDetail" minOccurs="0"/>
 *         &lt;element name="TxnSource" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="TaxFormType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="TaxFormNum" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *         &lt;element name="TransactionLocationType" type="{http://www.w3.org/2001/XMLSchema}string" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Transaction", propOrder = {
    "docNumber",
    "txnDate",
    "departmentRef",
    "currencyRef",
    "exchangeRate",
    "privateNote",
    "txnStatus",
    "linkedTxn",
    "line",
    "txnTaxDetail",
    "txnSource",
    "taxFormType",
    "taxFormNum",
    "transactionLocationType"
})
@XmlSeeAlso({
    ChargeCredit.class,
    BillPayment.class,
    Deposit.class,
    Payment.class,
    Transfer.class,
    JournalEntry.class,
    Purchase.class,
    StatementCharge.class,
    ReimburseCharge.class,
    PurchaseByVendor.class,
    SalesTransaction.class
})
public class Transaction
    extends IntuitEntity
    implements Serializable, Equals, HashCode
{

    private final static long serialVersionUID = 1L;
    @XmlElement(name = "DocNumber")
    protected String docNumber;
    @XmlElement(name = "TxnDate", type = String.class)
    @XmlJavaTypeAdapter(DateAdapter.class)
    @XmlSchemaType(name = "date")
    protected Date txnDate;
    @XmlElement(name = "DepartmentRef")
    protected ReferenceType departmentRef;
    @XmlElement(name = "CurrencyRef")
    protected ReferenceType currencyRef;
    @XmlElement(name = "ExchangeRate")
    protected BigDecimal exchangeRate;
    @XmlElement(name = "PrivateNote")
    protected String privateNote;
    @XmlElement(name = "TxnStatus")
    protected String txnStatus;
    @XmlElement(name = "LinkedTxn")
    protected List<LinkedTxn> linkedTxn;
    @XmlElement(name = "Line")
    protected List<Line> line;
    @XmlElement(name = "TxnTaxDetail")
    protected TxnTaxDetail txnTaxDetail;
    @XmlElement(name = "TxnSource")
    protected String txnSource;
    @XmlElement(name = "TaxFormType")
    protected String taxFormType;
    @XmlElement(name = "TaxFormNum")
    protected String taxFormNum;
    @XmlElement(name = "TransactionLocationType")
    protected String transactionLocationType;

    /**
     * Gets the value of the docNumber property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDocNumber() {
        return docNumber;
    }

    /**
     * Sets the value of the docNumber property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDocNumber(String value) {
        this.docNumber = value;
    }

    /**
     * Gets the value of the txnDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public Date getTxnDate() {
        return txnDate;
    }

    /**
     * Sets the value of the txnDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTxnDate(Date value) {
        this.txnDate = value;
    }

    /**
     * Gets the value of the departmentRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getDepartmentRef() {
        return departmentRef;
    }

    /**
     * Sets the value of the departmentRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setDepartmentRef(ReferenceType value) {
        this.departmentRef = value;
    }

    /**
     * Gets the value of the currencyRef property.
     * 
     * @return
     *     possible object is
     *     {@link ReferenceType }
     *     
     */
    public ReferenceType getCurrencyRef() {
        return currencyRef;
    }

    /**
     * Sets the value of the currencyRef property.
     * 
     * @param value
     *     allowed object is
     *     {@link ReferenceType }
     *     
     */
    public void setCurrencyRef(ReferenceType value) {
        this.currencyRef = value;
    }

    /**
     * Gets the value of the exchangeRate property.
     * 
     * @return
     *     possible object is
     *     {@link BigDecimal }
     *     
     */
    public BigDecimal getExchangeRate() {
        return exchangeRate;
    }

    /**
     * Sets the value of the exchangeRate property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigDecimal }
     *     
     */
    public void setExchangeRate(BigDecimal value) {
        this.exchangeRate = value;
    }

    /**
     * Gets the value of the privateNote property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getPrivateNote() {
        return privateNote;
    }

    /**
     * Sets the value of the privateNote property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setPrivateNote(String value) {
        this.privateNote = value;
    }

    /**
     * Gets the value of the txnStatus property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTxnStatus() {
        return txnStatus;
    }

    /**
     * Sets the value of the txnStatus property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTxnStatus(String value) {
        this.txnStatus = value;
    }

    /**
     * Gets the value of the linkedTxn property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the linkedTxn property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLinkedTxn().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link LinkedTxn }
     * 
     * 
     */
    public List<LinkedTxn> getLinkedTxn() {
        if (linkedTxn == null) {
            linkedTxn = new ArrayList<LinkedTxn>();
        }
        return this.linkedTxn;
    }

    /**
     * Gets the value of the line property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the line property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getLine().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Line }
     * 
     * 
     */
    public List<Line> getLine() {
        if (line == null) {
            line = new ArrayList<Line>();
        }
        return this.line;
    }

    /**
     * Gets the value of the txnTaxDetail property.
     * 
     * @return
     *     possible object is
     *     {@link TxnTaxDetail }
     *     
     */
    public TxnTaxDetail getTxnTaxDetail() {
        return txnTaxDetail;
    }

    /**
     * Sets the value of the txnTaxDetail property.
     * 
     * @param value
     *     allowed object is
     *     {@link TxnTaxDetail }
     *     
     */
    public void setTxnTaxDetail(TxnTaxDetail value) {
        this.txnTaxDetail = value;
    }

    /**
     * Gets the value of the txnSource property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTxnSource() {
        return txnSource;
    }

    /**
     * Sets the value of the txnSource property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTxnSource(String value) {
        this.txnSource = value;
    }

    /**
     * Gets the value of the taxFormType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTaxFormType() {
        return taxFormType;
    }

    /**
     * Sets the value of the taxFormType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTaxFormType(String value) {
        this.taxFormType = value;
    }

    /**
     * Gets the value of the taxFormNum property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTaxFormNum() {
        return taxFormNum;
    }

    /**
     * Sets the value of the taxFormNum property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTaxFormNum(String value) {
        this.taxFormNum = value;
    }

    /**
     * Gets the value of the transactionLocationType property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTransactionLocationType() {
        return transactionLocationType;
    }

    /**
     * Sets the value of the transactionLocationType property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTransactionLocationType(String value) {
        this.transactionLocationType = value;
    }

    /**
     * Sets the value of the linkedTxn property.
     * 
     * @param linkedTxn
     *     allowed object is
     *     {@link LinkedTxn }
     *     
     */
    public void setLinkedTxn(List<LinkedTxn> linkedTxn) {
        this.linkedTxn = linkedTxn;
    }

    /**
     * Sets the value of the line property.
     * 
     * @param line
     *     allowed object is
     *     {@link Line }
     *     
     */
    public void setLine(List<Line> line) {
        this.line = line;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof Transaction)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final Transaction that = ((Transaction) object);
        {
            String lhsDocNumber;
            lhsDocNumber = this.getDocNumber();
            String rhsDocNumber;
            rhsDocNumber = that.getDocNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "docNumber", lhsDocNumber), LocatorUtils.property(thatLocator, "docNumber", rhsDocNumber), lhsDocNumber, rhsDocNumber)) {
                return false;
            }
        }
        {
            Date lhsTxnDate;
            lhsTxnDate = this.getTxnDate();
            Date rhsTxnDate;
            rhsTxnDate = that.getTxnDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "txnDate", lhsTxnDate), LocatorUtils.property(thatLocator, "txnDate", rhsTxnDate), lhsTxnDate, rhsTxnDate)) {
                return false;
            }
        }
        {
            ReferenceType lhsDepartmentRef;
            lhsDepartmentRef = this.getDepartmentRef();
            ReferenceType rhsDepartmentRef;
            rhsDepartmentRef = that.getDepartmentRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "departmentRef", lhsDepartmentRef), LocatorUtils.property(thatLocator, "departmentRef", rhsDepartmentRef), lhsDepartmentRef, rhsDepartmentRef)) {
                return false;
            }
        }
        {
            ReferenceType lhsCurrencyRef;
            lhsCurrencyRef = this.getCurrencyRef();
            ReferenceType rhsCurrencyRef;
            rhsCurrencyRef = that.getCurrencyRef();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "currencyRef", lhsCurrencyRef), LocatorUtils.property(thatLocator, "currencyRef", rhsCurrencyRef), lhsCurrencyRef, rhsCurrencyRef)) {
                return false;
            }
        }
        {
            BigDecimal lhsExchangeRate;
            lhsExchangeRate = this.getExchangeRate();
            BigDecimal rhsExchangeRate;
            rhsExchangeRate = that.getExchangeRate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "exchangeRate", lhsExchangeRate), LocatorUtils.property(thatLocator, "exchangeRate", rhsExchangeRate), lhsExchangeRate, rhsExchangeRate)) {
                return false;
            }
        }
        {
            String lhsPrivateNote;
            lhsPrivateNote = this.getPrivateNote();
            String rhsPrivateNote;
            rhsPrivateNote = that.getPrivateNote();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "privateNote", lhsPrivateNote), LocatorUtils.property(thatLocator, "privateNote", rhsPrivateNote), lhsPrivateNote, rhsPrivateNote)) {
                return false;
            }
        }
        {
            String lhsTxnStatus;
            lhsTxnStatus = this.getTxnStatus();
            String rhsTxnStatus;
            rhsTxnStatus = that.getTxnStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "txnStatus", lhsTxnStatus), LocatorUtils.property(thatLocator, "txnStatus", rhsTxnStatus), lhsTxnStatus, rhsTxnStatus)) {
                return false;
            }
        }
        {
            List<LinkedTxn> lhsLinkedTxn;
            lhsLinkedTxn = (((this.linkedTxn!= null)&&(!this.linkedTxn.isEmpty()))?this.getLinkedTxn():null);
            List<LinkedTxn> rhsLinkedTxn;
            rhsLinkedTxn = (((that.linkedTxn!= null)&&(!that.linkedTxn.isEmpty()))?that.getLinkedTxn():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "linkedTxn", lhsLinkedTxn), LocatorUtils.property(thatLocator, "linkedTxn", rhsLinkedTxn), lhsLinkedTxn, rhsLinkedTxn)) {
                return false;
            }
        }
        {
            List<Line> lhsLine;
            lhsLine = (((this.line!= null)&&(!this.line.isEmpty()))?this.getLine():null);
            List<Line> rhsLine;
            rhsLine = (((that.line!= null)&&(!that.line.isEmpty()))?that.getLine():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "line", lhsLine), LocatorUtils.property(thatLocator, "line", rhsLine), lhsLine, rhsLine)) {
                return false;
            }
        }
        {
            TxnTaxDetail lhsTxnTaxDetail;
            lhsTxnTaxDetail = this.getTxnTaxDetail();
            TxnTaxDetail rhsTxnTaxDetail;
            rhsTxnTaxDetail = that.getTxnTaxDetail();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "txnTaxDetail", lhsTxnTaxDetail), LocatorUtils.property(thatLocator, "txnTaxDetail", rhsTxnTaxDetail), lhsTxnTaxDetail, rhsTxnTaxDetail)) {
                return false;
            }
        }
        {
            String lhsTxnSource;
            lhsTxnSource = this.getTxnSource();
            String rhsTxnSource;
            rhsTxnSource = that.getTxnSource();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "txnSource", lhsTxnSource), LocatorUtils.property(thatLocator, "txnSource", rhsTxnSource), lhsTxnSource, rhsTxnSource)) {
                return false;
            }
        }
        {
            String lhsTaxFormType;
            lhsTaxFormType = this.getTaxFormType();
            String rhsTaxFormType;
            rhsTaxFormType = that.getTaxFormType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxFormType", lhsTaxFormType), LocatorUtils.property(thatLocator, "taxFormType", rhsTaxFormType), lhsTaxFormType, rhsTaxFormType)) {
                return false;
            }
        }
        {
            String lhsTaxFormNum;
            lhsTaxFormNum = this.getTaxFormNum();
            String rhsTaxFormNum;
            rhsTaxFormNum = that.getTaxFormNum();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "taxFormNum", lhsTaxFormNum), LocatorUtils.property(thatLocator, "taxFormNum", rhsTaxFormNum), lhsTaxFormNum, rhsTaxFormNum)) {
                return false;
            }
        }
        {
            String lhsTransactionLocationType;
            lhsTransactionLocationType = this.getTransactionLocationType();
            String rhsTransactionLocationType;
            rhsTransactionLocationType = that.getTransactionLocationType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transactionLocationType", lhsTransactionLocationType), LocatorUtils.property(thatLocator, "transactionLocationType", rhsTransactionLocationType), lhsTransactionLocationType, rhsTransactionLocationType)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            String theDocNumber;
            theDocNumber = this.getDocNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "docNumber", theDocNumber), currentHashCode, theDocNumber);
        }
        {
            Date theTxnDate;
            theTxnDate = this.getTxnDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "txnDate", theTxnDate), currentHashCode, theTxnDate);
        }
        {
            ReferenceType theDepartmentRef;
            theDepartmentRef = this.getDepartmentRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "departmentRef", theDepartmentRef), currentHashCode, theDepartmentRef);
        }
        {
            ReferenceType theCurrencyRef;
            theCurrencyRef = this.getCurrencyRef();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "currencyRef", theCurrencyRef), currentHashCode, theCurrencyRef);
        }
        {
            BigDecimal theExchangeRate;
            theExchangeRate = this.getExchangeRate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "exchangeRate", theExchangeRate), currentHashCode, theExchangeRate);
        }
        {
            String thePrivateNote;
            thePrivateNote = this.getPrivateNote();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "privateNote", thePrivateNote), currentHashCode, thePrivateNote);
        }
        {
            String theTxnStatus;
            theTxnStatus = this.getTxnStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "txnStatus", theTxnStatus), currentHashCode, theTxnStatus);
        }
        {
            List<LinkedTxn> theLinkedTxn;
            theLinkedTxn = (((this.linkedTxn!= null)&&(!this.linkedTxn.isEmpty()))?this.getLinkedTxn():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "linkedTxn", theLinkedTxn), currentHashCode, theLinkedTxn);
        }
        {
            List<Line> theLine;
            theLine = (((this.line!= null)&&(!this.line.isEmpty()))?this.getLine():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "line", theLine), currentHashCode, theLine);
        }
        {
            TxnTaxDetail theTxnTaxDetail;
            theTxnTaxDetail = this.getTxnTaxDetail();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "txnTaxDetail", theTxnTaxDetail), currentHashCode, theTxnTaxDetail);
        }
        {
            String theTxnSource;
            theTxnSource = this.getTxnSource();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "txnSource", theTxnSource), currentHashCode, theTxnSource);
        }
        {
            String theTaxFormType;
            theTaxFormType = this.getTaxFormType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxFormType", theTaxFormType), currentHashCode, theTaxFormType);
        }
        {
            String theTaxFormNum;
            theTaxFormNum = this.getTaxFormNum();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "taxFormNum", theTaxFormNum), currentHashCode, theTaxFormNum);
        }
        {
            String theTransactionLocationType;
            theTransactionLocationType = this.getTransactionLocationType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transactionLocationType", theTransactionLocationType), currentHashCode, theTransactionLocationType);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
